<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.voicecodes.persitience.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.voicecodes.domain.model.User">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="LOGIN_COUNT" jdbcType="INTEGER" property="loginCount" />
    <result column="LAST_LOGIN_IP" jdbcType="VARCHAR" property="lastLoginIp" />
    <result column="LAST_LOGIN_TIME" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="STATE" jdbcType="CHAR" property="state" />
    <result column="LOCKED_TIME" jdbcType="TIMESTAMP" property="lockedTime" />
    <result column="EFFECTIME_TIME" jdbcType="TIMESTAMP" property="effectimeTime" />
    <result column="EXPIRED_TIME" jdbcType="TIMESTAMP" property="expiredTime" />
    <result column="LAST_FAIL_TIME" jdbcType="TIMESTAMP" property="lastFailTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, NAME, USERNAME, LOGIN_COUNT, LAST_LOGIN_IP, LAST_LOGIN_TIME, CREATE_TIME, PASSWORD, 
    STATE, LOCKED_TIME, EFFECTIME_TIME, EXPIRED_TIME, LAST_FAIL_TIME
  </sql>
  <select id="selectByExample" parameterType="com.voicecodes.domain.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.voicecodes.domain.model.UserExample">
    delete from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.voicecodes.domain.model.User">
    insert into t_user (ID, NAME, USERNAME, 
      LOGIN_COUNT, LAST_LOGIN_IP, LAST_LOGIN_TIME, 
      CREATE_TIME, PASSWORD, STATE, 
      LOCKED_TIME, EFFECTIME_TIME, EXPIRED_TIME, 
      LAST_FAIL_TIME)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{loginCount,jdbcType=INTEGER}, #{lastLoginIp,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{password,jdbcType=VARCHAR}, #{state,jdbcType=CHAR}, 
      #{lockedTime,jdbcType=TIMESTAMP}, #{effectimeTime,jdbcType=TIMESTAMP}, #{expiredTime,jdbcType=TIMESTAMP}, 
      #{lastFailTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.voicecodes.domain.model.User">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="loginCount != null">
        LOGIN_COUNT,
      </if>
      <if test="lastLoginIp != null">
        LAST_LOGIN_IP,
      </if>
      <if test="lastLoginTime != null">
        LAST_LOGIN_TIME,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="state != null">
        STATE,
      </if>
      <if test="lockedTime != null">
        LOCKED_TIME,
      </if>
      <if test="effectimeTime != null">
        EFFECTIME_TIME,
      </if>
      <if test="expiredTime != null">
        EXPIRED_TIME,
      </if>
      <if test="lastFailTime != null">
        LAST_FAIL_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="loginCount != null">
        #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="lastLoginIp != null">
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=CHAR},
      </if>
      <if test="lockedTime != null">
        #{lockedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="effectimeTime != null">
        #{effectimeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiredTime != null">
        #{expiredTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastFailTime != null">
        #{lastFailTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.voicecodes.domain.model.UserExample" resultType="java.lang.Long">
    select count(*) from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_user
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.loginCount != null">
        LOGIN_COUNT = #{record.loginCount,jdbcType=INTEGER},
      </if>
      <if test="record.lastLoginIp != null">
        LAST_LOGIN_IP = #{record.lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginTime != null">
        LAST_LOGIN_TIME = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.password != null">
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        STATE = #{record.state,jdbcType=CHAR},
      </if>
      <if test="record.lockedTime != null">
        LOCKED_TIME = #{record.lockedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.effectimeTime != null">
        EFFECTIME_TIME = #{record.effectimeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expiredTime != null">
        EXPIRED_TIME = #{record.expiredTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastFailTime != null">
        LAST_FAIL_TIME = #{record.lastFailTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_user
    set ID = #{record.id,jdbcType=INTEGER},
      NAME = #{record.name,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      LOGIN_COUNT = #{record.loginCount,jdbcType=INTEGER},
      LAST_LOGIN_IP = #{record.lastLoginIp,jdbcType=VARCHAR},
      LAST_LOGIN_TIME = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      STATE = #{record.state,jdbcType=CHAR},
      LOCKED_TIME = #{record.lockedTime,jdbcType=TIMESTAMP},
      EFFECTIME_TIME = #{record.effectimeTime,jdbcType=TIMESTAMP},
      EXPIRED_TIME = #{record.expiredTime,jdbcType=TIMESTAMP},
      LAST_FAIL_TIME = #{record.lastFailTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.voicecodes.domain.model.User">
    update t_user
    <set>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="loginCount != null">
        LOGIN_COUNT = #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="lastLoginIp != null">
        LAST_LOGIN_IP = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        LAST_LOGIN_TIME = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        STATE = #{state,jdbcType=CHAR},
      </if>
      <if test="lockedTime != null">
        LOCKED_TIME = #{lockedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="effectimeTime != null">
        EFFECTIME_TIME = #{effectimeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiredTime != null">
        EXPIRED_TIME = #{expiredTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastFailTime != null">
        LAST_FAIL_TIME = #{lastFailTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.voicecodes.domain.model.User">
    update t_user
    set NAME = #{name,jdbcType=VARCHAR},
      USERNAME = #{username,jdbcType=VARCHAR},
      LOGIN_COUNT = #{loginCount,jdbcType=INTEGER},
      LAST_LOGIN_IP = #{lastLoginIp,jdbcType=VARCHAR},
      LAST_LOGIN_TIME = #{lastLoginTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      PASSWORD = #{password,jdbcType=VARCHAR},
      STATE = #{state,jdbcType=CHAR},
      LOCKED_TIME = #{lockedTime,jdbcType=TIMESTAMP},
      EFFECTIME_TIME = #{effectimeTime,jdbcType=TIMESTAMP},
      EXPIRED_TIME = #{expiredTime,jdbcType=TIMESTAMP},
      LAST_FAIL_TIME = #{lastFailTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <!-- 自定义2 -->
  <resultMap id="RoleMap" type="com.voicecodes.domain.model.Role">
    <id property="id" column="ID"/>
    <result property="name" column="NAME"/>
  </resultMap>
  <select id="findRoleByLoginId" resultMap="RoleMap">
    SELECT r.id,r.name from t_user u
    INNER JOIN t_user_role sur ON  u.id = sur.user_id
    INNER JOIN t_role r ON sur.role_id = r.id
    WHERE loginid = #{param1} and u.state = #{param2}
  </select>
</mapper>